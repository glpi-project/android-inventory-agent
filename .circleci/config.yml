version: 2
reference:

  ## Workspaces
  workspace: &workspace
    ~/flyve_mdm

  ## Docker image configurations
  android_config: &android_config
    working_directory: *workspace
    docker:
        - image: circleci/android:api-29-node
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

  ## Cache
  gradle_key: &gradle_key
    jars-v1-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

  apk_certified_key: &apk_certified_key
    apk-certified-v1-{{ .Environment.CIRCLE_WORKFLOW_ID }}

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  restore_apk_certified_cache: &restore_apk_certified_cache
    restore_cache:
      key: *apk_certified_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: *gradle_key
      paths:
        - ~/.gradle
        - ~/.m2

  save_apk_certified_cache: &save_apk_certified_cache
    save_cache:
      key: *apk_certified_key
      environment:
        WORKSPACE: *workspace
      paths:
        - $WORKSPACE/app/build/outputs/apk/release/appCertified.apk
      destination:
        - $WORKSPACE/release/appCertified.apk

  ## Dependencies
  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: bundle check || bundle install --path vendor/bundle

  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies

  validate_running: &validate_running
    run:
      name: Validate running
      command: source ci/scripts/validate_running.sh
  update_licenses: &update_licenses
    run:
      name: Update licenses
      command: source ci/scripts/ci_licenses.sh
jobs:
  # unit test
  build:
    <<: *android_config
    steps:
      - checkout
      - *update_licenses
      - *validate_running
      - *restore_gradle_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - run:
          name: Run test
          command: ./gradlew test

  # Test Instrumentation with Android 4.1 JELLY_BEAN API 16
  test_instrumentation:
    <<: *android_config
    steps:
      - checkout
      - *update_licenses
      - *validate_running
      - *restore_gradle_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - run:
          name: Create debug apk
          command: ./gradlew assembleDebug assembleAndroidTest
      - run:
          name: Run Tests on Firebase test lab
          command: source ci/scripts/google_cloud.sh

  check_transifex:
    <<: *android_config
    steps:
      - checkout
      - *update_licenses
      - *validate_running
      - *restore_gradle_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - run:
          name: Setup environment
          command: source ci/scripts/setup_environment.sh
      - run:
          name: Pull transifex
          command: tx pull --all --force
      - run:
          name: Create debug apk
          command: ./gradlew assemble

  deploy_alpha:
    <<: *android_config
    steps:
      - checkout
      - *update_licenses
      - *validate_running
      - *restore_gradle_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - *restore_apk_certified_cache
      - run:
          name: Setup environment
          command: source ci/scripts/setup_environment.sh
      - run:
          name: Update version code
          command: ./gradlew updateVersionCode
      - run:
          name: Generate certified apk
          command: source ci/scripts/app_certification.sh
      - run:
          name: Deploy Alpha
          command: source ci/scripts/deploy_alpha.sh

  deploy_production:
    <<: *android_config
    steps:
      - checkout
      - *update_licenses
      - *validate_running
      - *restore_gradle_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - *restore_apk_certified_cache
      - run:
          name: Setup environment
          command: source ci/scripts/setup_environment.sh
      - run:
          name: Update version code
          command: ./gradlew updateVersionCode
      - run:
          name: Update version name
          command: ./gradlew updateVersionName -P vName=$GIT_TAG
      - run:
          name: Generate certified apk
          command: source ci/scripts/app_certification.sh
      - run:
          name: Deploy Production
          command: source ci/scripts/deploy_production.sh
      - run:
          name: Create changelog, github release and push
          command: source ci/scripts/release.sh

  documentation:
    <<: *android_config
    steps:
      - checkout
      - *update_licenses
      - *validate_running
      - *restore_gradle_cache
      - *ruby_dependencies
      - *android_dependencies
      - *save_gradle_cache
      - run:
          name: Setup environment
          command: source ci/scripts/setup_environment.sh
      - run:
          name: Generate Documentation
          command: source ci/scripts/create_documentation.sh

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build:
          context: org-global
      - check_transifex:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
                - develop
      - test_instrumentation:
          context: org-global
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
      - deploy_alpha:
          context: org-global
          requires:
            - build
          filters:
            branches:
              only:
                - develop
      - deploy_production:
          context: org-global
          requires:
            - build
          filters:
            branches:
              only:
                - master
      - documentation:
          context: org-global
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - develop